/**
 * @file   tiooutput.h
 * @author Egorov N.V. <egorov@rti-mints.ru>
 * @date   Wed Aug 11 15:12:43 2010
 *
 * @brief  Файл содержит вспомогательные функции для форматирования и
 * вывода информации.
 *
 */


#ifndef _TIO_OUTPUT_H
#define _TIO_OUTPUT_H


/**
 * Список типов сообщений вывода
 *
 * @see uniformstroutput()
 */

enum msgtype {
    ERROR,                      /**< Собщение об ошибке */
    DEBUG,                      /**< вывод отладочной информации*/
    WARNING,                    /**< Вывод предупреждения */
    MESSAGE                     /**< Вывод информационного собщения */
}; 


/**
 * Выявление вхождений параметров в строку.
 *
 * @param formStr   Указатель на первый эллемент строки.
 * @param list      Указатель на список входящих параметров.
 * @param res       Указатель на выделенную память под результат.
 *
 * @return 0 при удачном завершении и номер ошибки в противном случае.
 */
int parseFormat( char* res, const char* formStr, const va_list* list );

/**
 * Функция ведёт подсчёт кол-ва параметров в форматированной строке.
 *
 * @param formStr   Указатель на первый эллемент строки
 * @param length    Длина строки
 *
 * @return  Возвращение количества параметров входящих в строку
 *
 * TODO: нужно исправить эту функция, так чтобы, если не хватает буфера то
 * она сама смогла бы его нарастить. (для больших строк вывода)
 *
 */
int numOccur( const char* formStr, size_t length );

/**
 * Вставка параметра в основную строку и перевод корретки в конец текущей
 * строки.
 *
 * @param curStr    Основная строка
 * @param buf       Строка параметр
 * @param itr       Итератор основной строки
 *
 * @return  0 при удачном завершении и код ошибки в противном случае
 */
int catAndGo( char* curStr, char* buf, int* itr );

/** 
 * \brief Функция строчного вывода для всех типов сообщений
 * 
 * Функция предназначена для вывода в потоки вывода форматированных
 * сообщений. паоток вывод и префикс передаваемый сообщению
 * устанавливается в зависимости от типа сообщения.
 *
 * @param type тип сообщения
 * @param format строка форматирования
 * @param args список аргументов для страки форматированного вывода
 * 
 * @return 0 в случае успешного или код ошибки в противном
 * случае. Варианты ошибок TEINVAL TENES ENOMEM.
 *
 * \see tioGetError()
 *
 */
int uniformstroutput(enum msgtype type, const char* format, va_list args);



#endif //_TIOOUTPUT_H
