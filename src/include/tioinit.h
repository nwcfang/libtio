/* Copyright (C) 2010 by РТИ им. Минтса */
/**
 * @file   tioinit.h
 * @author Egorov N.V. <egorov@rti-mints.ru>
 * @date   Fri Jun 18 14:21:16 2010
 * 
 * @brief Описание типов данных для функций инициализации библиотеки.
 * 
 * 
 */

#include <tio.h>

#ifndef _TIOINIT_H
#define _TIOINIT_H


/**
 * Внутренняя структура данных для представления ключей и значений
 * 
 */
typedef struct _tio_param_rec
{
  char *name;                   /**< Имя параметра */
  char **keys;                  /**< Ключи ( как вводится в ком. строке ) */
  char *skeys;                  /**< Имя ключей для коротких параметров. */
  char *description;            /**< Описание параметра */
  char *val;                    /**< Значение ключа или признаки установленного
                                     ключа */
  int has_key;                  /**< Есть ли ключ у параметра */
} tio_param_rec;


/// Внутренее представление запрошенных программой параметров.
extern tio_param_rec *Tio_params;
/// Количсетво запрошенных программой параметров.
extern size_t         Tio_params_sz;


/**
 * Состочяния библиотеки установленное ключами из командной строки 
 * 
 */
typedef struct _tio_lib_state
{
  char* key;                    /**< Ключ комаандной строки */
  int set;                      /**< Признак установленности ключа */
  tio_status status;            /**< Код статуса которому соответствут
                                 * ключ */
  void* value;                  /**< Строковое значение переданное с
                                 * ключом */
} tio_lib_state;

/// Массив содержащий внутреннее состояние библиотеки.
extern tio_lib_state tio_self_state[];
  

/**
 * Структура представления ключа, связываюшая сроку представления с
 * данными о ключе
 *
 * Структура содержит символ с кротким ключом ИЛИ строку с длинным (
 * но не оба значения одновременно ) и указать на ту структуру с
 * которой связан данный ключ.
 */
typedef struct _tio_key_string
{
  char symb;                    /**< Символ короткого клбча или \\0 в
                                   случае если используется длинный
                                   ключ */
  char *str;                    /**< Строка длинного ключа ( вмесете с
                                   -- ) или NULL если используется
                                   короткий ключ */
  tio_param_rec *per;           /**< Ссылка то имя к которому
                                   относиться данный ключ */
} tio_key_string;


/**
 * Простая реализация стека строк
 * 
 */
typedef struct _tio_simple_chain
{
  char* val;                    /**< Строка */
  struct _tio_simple_chain *next; /**< Следующий элемент стека */
} tio_simple_chain;

    
/*
 * Фукция вывода на экран сообщения помощи по программе.
 *
 * @param help_msg  Краткое описание программы.
 * @param progName  Имя программы
 * @param params    Структура с ключами и их значениями
 *
 * @return 0	    При успешном завершении и код ошибки в противном случае
 */
int tioHelp( const char* help_msg, const char* progName,
             const tio_param_rec par[], const size_t sz );


/** 
 * Функция освобождения ресурсов выделенных при вызове tioInit
 * 
 */
void tioFree();




#endif //_TIOINIT_H
